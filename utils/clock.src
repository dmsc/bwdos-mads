*************************************
*				*
*     " C L O C K "  FOR BW-DOS	*
*				*
*************************************

*This is a CLOCK implementation using the standard OS clock
*based on the BW-DOS 1.3 one.

SRCHADR	EQU	$80
RELZP	EQU	$82
TMP	EQU	$83

	ORG	$3000

	ICL	"chkbw.inc"
***

*Get command line
START2	LDA	10
	CLC
	ADC	#3
	STA	GETNAME+1
	LDA	11
	ADC	#0
	STA	GETNAME+2
GETNAME	JSR	$FFFF

*Check ON/OFF
	LDY	#36
	LDA	(10),Y
	CMP	#'O'
	BNE	SYNTAX

	INY
	LDA	(10),Y
	CMP	#'N'
	BEQ	ST2ON
	CMP	#'F'
	BNE	SYNTAX
*OFF?
	INY
	CMP	(10),Y
	BNE	SYNTAX

	INY
	LDA	(10),Y
	CMP	#$9B
	BEQ	DISABLE

SYNTAX	JSR	PRINT
	DTA	155
	DTA	C"Syntax: CLOCK ON"
	DTA	155
	DTA	C"        CLOCK OFF"
	DTA	155,0

	JMP	(10)

*ON?
ST2ON	INY
	LDA	(10),Y
	CMP	#$9B
	BNE	SYNTAX
	JMP	INSTALL


DISABLE	JSR	SRCHRUT
	BCS	DISABLE2

	JSR	PRINT
	DTA	155
	DTA	C"Clock not Installed!"
	DTA	155,0

	JMP	DISERR2
***

DISCANT	JSR	PRINT
	DTA	155
	DTA	C"Clock is not the last handler"
	DTA	155
	DTA	C"installed!"
	DTA	155,0

DISERR2	JSR	PRINT
	DTA	C"Can't remove."
	DTA	155,0

	JMP	(10)
***

DISABLE2	LDA	743
	SEC
	SBC	SRCHADR
	TAY
	LDA	744
	SBC	SRCHADR+1
	BNE	DISCANT

	CPY	#RESLEN
	BNE	DISCANT

*Call GETTD to get current time
	JSR	GETTDJ

*Restore DOSINI and MEMLO
	LDY	#2

DISBL2	LDA	(SRCHADR),Y
	STA	12-1,Y
	LDA	SRCHADR-1,Y
	STA	743-1,Y
	DEY
	BNE	DISBL2
*Restore GETTD and SETDT handlers
	LDY	#(OLDADR-RESID+3)
	LDX	#3

DISABL3	LDA	(SRCHADR),Y
	STA	$706,X
	DEY
	DEX
	BPL	DISABL3

*Call SETTD to set current time
	JSR	SETTDJ

*OK
	JSR	PRINT
	DTA	155
	DTA	C"Clock Removed."
	DTA	155,0
	JMP	(10)

***

INSTALL	JSR	SRCHRUT
	BCC	INST2

	JSR	PRINT
	DTA	155
	DTA	C"Clock already installed !"
	DTA	155,0
	JMP	(10)

*Setup MEMLO
INST2	LDA	743
	STA	SRCHADR
	CLC
	ADC	#RESLEN
	STA	R01+1

	LDA	744
	STA	SRCHADR+1
	ADC	#0
	STA	R02+1

*Detect PAL/NTSC by watching VCOUNT
	LDA	#0
PALNT	STA	TMP
	LDA	$D40B
	CMP	TMP
	BCS	PALNT

*TMP = 155 PAL, 130 NTSC
	LDA	TMP
	CMP	#135
	BCS	PAL

*NTSC, set up correct divisor
	LDA	#60
	STA	DIVT+6

*Relocate the code
PAL	LDX	#0

RELOC	LDY	RELOCT,X
	BEQ	INST3

	LDA	RELOCT+1,X
	CLC
	ADC	SRCHADR
	STA	RESID,Y
	LDA	#0
	ADC	SRCHADR+1
	STA	RESID+1,Y

	INX
	INX
	BNE	RELOC

*Get current clock, and install new handlers
INST3	JSR	GETTDJ

	LDX	#3
INST4	LDA	$706,X
	STA	OLDADR,X
	DEX
	BPL	INST4

*Copy our resident code
	LDY	#RESLEN
INST5	DEY
	LDA	RESID,Y
	STA	(SRCHADR),Y
	TYA
	BNE	INST5
*Copy our DOSINI
	LDY	#2
INST6	LDA	12-1,Y
	STA	(SRCHADR),Y
	LDA	SRCHADR-1,Y
	STA	12-1,Y
	DEY
	BNE	INST6
*Setup GETTD and SETTD
	LDX	#3
INST7	LDA	NEWADR,X
	STA	$706,X
	DEX
	BPL	INST7
*Setup MEMLO
	JSR	R01
*Set new TIME
	JSR	SETTDJ
*Ok
	JSR	PRINT
	DTA	155
	DTA	C"Clock Installed."
	DTA	155,0
	JMP	(10)
***

*Search resident code, skipping over the relocation
*addresses, returns C=1 if found
SRCHRUT	LDA	743
	SEC
	SBC	#RESLEN
	STA	SRCHADR
	LDA	744
	SBC	#0
	STA	SRCHADR+1

SRCH1	LDY	#SCBEG-RESID
	LDX	#0

SRCH1A	LDA	RESID,Y
	CMP	(SRCHADR),Y
	BEQ	SRCH3

*Search next address
	LDA	SRCHADR
	BNE	SRCH2
	DEC	SRCHADR+1
SRCH2	DEC	SRCHADR

	LDA	SRCHADR+1
	CMP	#$10
	BCS	SRCH1
	RTS

*Skip over RELOCs
SRCH3	INY
	CPY	#SCEND-RESID
	BEQ	SRCHOK

	TYA
	CMP	RELOCT,X
	BNE	SRCH1A
	INX
	INX
	INY
	INY
	BNE	SRCH1A

SRCHOK	RTS

GETTDJ	JMP	($706)
SETTDJ	JMP	($708)

*Relocation table
RELOCT
	DTA	S4-RESID+1,LSTCLK-RESID
	DTA	S5-RESID+1,LSTCLK-RESID
	DTA	STD1-RESID+1,SWAPT-RESID
	DTA	S2-RESID+1,TDMIN-RESID
	DTA	S3-RESID+1,TDOLD-RESID
	DTA	GETTD-RESID+1,RDCLK-RESID
	DTA	GTD1-RESID+1,TDOLD-RESID
	DTA	S6-RESID+1,DIVT-RESID
	DTA	S7-RESID+1,DIVT-RESID
	DTA	S8-RESID+1,TDOLD-RESID
	DTA	S9-RESID+1,SWAPT-RESID
	DTA	S10-RESID+1,TDMIN-RESID
	DTA	NEWADR-RESID,GETTD-RESID
	DTA	NEWADR-RESID+2,SETTD-RESID

	DTA	0

*PRINT/PRT1
	ICL	"print.inc"
	ICL	"print1.inc"

*************************************
*	Resident portion		*
*************************************

*Call DOSINI
RESID	JSR	$FFFF

*Move MEMTOP
R01	LDA	#$22
	STA	743
R02	LDA	#$22
SCBEG	EQU	*		; Start of search code here
	STA	744
*Fall through to RDCLK to initialize after RESET

*Read value of CLOCK and store diff from last
RDCLK	LDA	#$60
RDC1	CMP	$D40B
	BCC	RDC1

	LDX	#2

RDC2	LDA	$12,X
	TAY

S4	SBC	LSTCLK,X
	STA	DIFCLK,X

	TYA
S5	STA	LSTCLK,X

	DEX
	BPL	RDC2

	RTS

SETTD	LDX	#5
STD1	LDY	SWAPT,X
	LDA	(10),Y
	SEC
S2	SBC	TDMIN,X
S3	STA	TDOLD,X
	DEX
	BPL	STD1
	BMI	RDCLK

GETTD	JSR	RDCLK

*For each interval (including jiffies)
	LDX	#6

*Adds old value to the total count
GTD1	LDA	TDOLD,X
	CLC
	LDY	#2

AD1	ADC	DIFCLK,Y
	STA	DIFCLK,Y
	LDA	#0
	DEY
	BPL	AD1

*Divide by interval divisor
*A=0 from above
	LDY	#23

DIV1	ASL	DIFCLK+2
	ROL	DIFCLK+1
	ROL	DIFCLK
	ROL

S6	CMP	DIVT,X
	BCC	DIV3
S7	SBC	DIVT,X
	INC	DIFCLK+2

DIV3	DEY
	BPL	DIV1

*Store in OLD and result
S8	STA	TDOLD,X

S9	LDY	SWAPT,X
	CLC
S10	ADC	TDMIN,X
	STA	(10),Y

	DEX
	BPL	GTD1

	RTS

DIFCLK	EQU	$31		; DIF to add to clock, use SIO ZP
TDMIN	DTA	0,1,1,0,0,0	; Min value of each TIME/DATE component
SWAPT	DTA	15,14,13,16,17,18,18  ; Reorder table for TIME/DATE components
DIVT	DTA	100,12,31,24,60,60,50 ; Max values of each TIME/DATE component
SCEND	EQU	*-1		; End of search code here
LSTCLK	DTA	0,0,0		; Last read CLOCK
TDOLD	DTA	23,7,15,8,0,0,0	; Last value of TIME/DATE

OLDADR	DTA	A(0,0)		; Store old GETTD/SETTD
RESLEN	EQU	*-RESID

*Outside of resident area, but relocated
NEWADR	DTA	A(0,0)

